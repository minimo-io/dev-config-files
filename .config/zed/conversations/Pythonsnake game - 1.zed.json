{"id":"8db0257d-f1bb-496c-9233-236f2241e6cd","zed":"context","version":"0.4.0","text":"\n\n\nCreate the snake-game in python\n```python\nfrom turtle import *\n\n\ndef food():\n    fd(10)\n    dot('red')\n    fd(50)\n    dot('green')\n\n\n\nreset()\n\ndone = False\n\nscore = 0\n\nsnake_x = [200]\n\nsnake_y = [200]\n\n\n# Function for moving the snake body\n\n\ndef move_snake():\n\n    global score, done, snake_x, snake_y\n    if snake_x[0] < -280 or snake_x[0] > 280 or snake_y[0] < -240 or snake_y[0] > 240:\n        fd(10)\n        done = True\n\n    else:\n\n        for x in range(len(snake_x)-1, 0, -1):\n            snake_x.pop()\n            snake_y.pop()\n        \n        snake_x.append(snake_x[0])\n        snake_y.append(snake_y[0])\n    \n\n# Game loop\n\n\nwhile not done:\n    \n    move_snake()\n    if keyboard.ispressed('q'):\n        exit()\n\n    if keyboard.ispressed('a'):\n        fd(15)\n        left(90)\n        \n    if keyboard.ispressed('d'):\n        fd(15)\n        right(90)\n        \n    food()\n    \n    if snake_x[0] == food_x and snake_y[0] == food_y:\n        score += 1\n        food()\n\n    color(\"black\")\n    goto(0,0)\n    write(\"Score : \" + str(score), align=\"center\", font=(\"Arial\",25,\"bold\"))\n    \n    update()\n\n```\n\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":21}}},{"id":{"replica_id":0,"value":15},"start":35,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":22}}},{"id":{"replica_id":0,"value":16},"start":1109,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":23}}}],"summary":"Pythonsnake game","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}