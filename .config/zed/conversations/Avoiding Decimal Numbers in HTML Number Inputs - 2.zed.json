{"id":"93ad1c1c-eab3-404b-abb6-0c55184ea981","zed":"context","version":"0.4.0","text":"\n\n\nHow to avoid that an html input of type=number accepts decimal numbers?\nTo prevent an HTML `<input>` element of type `number` from accepting decimal numbers, you can use the `step` attribute. Setting the `step` attribute to `1` ensures that only whole numbers are accepted.\n\nHere's how you can do it:\n\n```html\n<input type=\"number\" step=\"1\">\n```\n\n### Additional Attributes\n\nYou might also want to set the `min` and `max` attributes to control the range of acceptable values, and the `inputmode` attribute for better mobile keyboard support. For example:\n\n```html\n<input type=\"number\" min=\"0\" max=\"100\" step=\"1\" inputmode=\"numeric\">\n```\n\n- **min** and **max**: Define the minimum and maximum allowable values.\n- **step**: Specifies the legal number intervals that can be entered into an element. Setting it to `1` restricts the input to integers only.\n- **inputmode**: Hints at the type of content to expect when users interact with the input field on a mobile device.\n\n### Example\n\n```html\n<form>\n  <label for=\"quantity\">Quantity:</label>\n  <input id=\"quantity\" name=\"quantity\" type=\"number\" min=\"0\" max=\"100\" step=\"1\">\n  <button type=\"submit\">Submit</button>\n</form>\n```\n\nThis will ensure that the user can only input whole numbers within the specified range.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":57}}},{"id":{"replica_id":0,"value":30},"start":75,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":58}}},{"id":{"replica_id":0,"value":31},"start":1263,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":59}}}],"summary":"Avoiding Decimal Numbers in HTML Number Inputs","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}